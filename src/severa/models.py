# ruff: noqa
# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2023-04-28T13:51:26+00:00

from __future__ import annotations

from datetime import date, datetime
from enum import Enum
from typing import Annotated, List, Optional

from pydantic import BaseModel, Field, confloat, conint, constr


class UserWithFirstNameLastNameAndPhotoFileModel(BaseModel):
    code: Optional[str] = None
    name: Optional[str] = None
    guid: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None


class CountryRegionsStatus(Enum):
    NoRegion = "NoRegion"
    Unknown = "Unknown"
    HasRegions = "HasRegions"


class ModelWithName(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None


class AddressCustomer(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class ExceptionTypeEnum(Enum):
    InternalSystemError = "InternalSystemError"
    AuthenticationRequired = "AuthenticationRequired"
    AddonMissing = "AddonMissing"
    FeatureIsNotEnabled = "FeatureIsNotEnabled"
    InvalidParameter = "InvalidParameter"
    InvalidOperation = "InvalidOperation"
    InvalidRequest = "InvalidRequest"
    InsufficientApiScope = "InsufficientApiScope"
    InvalidApiVersion = "InvalidApiVersion"
    ConfigurationError = "ConfigurationError"
    UserLicenseType = "UserLicenseType"
    TermsOfServiceNotApproved = "TermsOfServiceNotApproved"
    HttpsRequired = "HttpsRequired"
    OrganizationNotActive = "OrganizationNotActive"
    PermissionDenied = "PermissionDenied"
    TrialExpired = "TrialExpired"
    NotAvailableInTrial = "NotAvailableInTrial"
    InvalidRecaptcha = "InvalidRecaptcha"
    AddonMissingTermsOfServiceApproval = "AddonMissingTermsOfServiceApproval"


class ExceptionLocationTypeEnum(Enum):
    PathParameter = "PathParameter"
    RequestBody = "RequestBody"
    RequestHeader = "RequestHeader"
    UriParameter = "UriParameter"


class PatchOperationType(Enum):
    Add = "Add"
    Copy = "Copy"
    Move = "Move"
    Remove = "Remove"
    Replace = "Replace"


class BusinessUnitCostCenterModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    identifier: Optional[str] = None


class CommunicationMethodType(Enum):
    Phone = "Phone"
    Fax = "Fax"
    MobilePhone = "MobilePhone"
    IPPhone = "IPPhone"
    InstantMessenger = "InstantMessenger"
    EmailAddress = "EmailAddress"


class SortDirection(Enum):
    Asc = "Asc"
    Desc = "Desc"
    AscNullsFirst = "AscNullsFirst"
    AscNullsLast = "AscNullsLast"
    DescNullsFirst = "DescNullsFirst"
    DescNullsLast = "DescNullsLast"


class ModelBaseWithRequiredGuid(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None


class CommunicationTypeSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    isActive: Optional[bool] = True
    type: Optional[CommunicationMethodType] = None


class ContactRoleModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True


class SalutationType(Enum):
    Mr_ = "Mr."
    Mrs_ = "Mrs."
    Ms_ = "Ms."


class ContactCustomer(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    number: Optional[int] = None


class SatisfactionLevelType(Enum):
    Unsatisfied = "Unsatisfied"
    Neutral = "Neutral"
    Satisfied = "Satisfied"
    Unknown = "Unknown"


class KeyValuePairOfStringAndObject(BaseModel):
    key: Optional[str] = None
    value: Optional[str] = None


class CostAccountModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    number: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    isTravelTypeDefault: Optional[bool] = None


class CostCenterModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    identifier: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None


class CurrencyBaseModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    code: Optional[str] = None
    symbol: Optional[str] = None


class CountryLanguage(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None


class CountryTimezone(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None


class CountryRegionTimezoneModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None


class MarketSegmentSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    isActive: Optional[bool] = None


class FileCategory(Enum):
    Misc = "Misc"
    Application = "Application"
    Projects = "Projects"
    Proposal = "Proposal"
    ProjectFees = "ProjectFees"
    Invoice = "Invoice"
    Users = "Users"
    ProjectTravelExpense = "ProjectTravelExpense"
    Customer = "Customer"


class ReferenceType(Enum):
    Invoice = "Invoice"
    Proposal = "Proposal"
    InvoiceTemplate = "InvoiceTemplate"
    Other = "Other"


class InvoiceFileModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    size: Optional[float] = None
    description: Optional[str] = None
    contentType: Optional[str] = None
    category: Optional[FileCategory] = None
    isInternal: Optional[bool] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    fileGuid: Optional[str] = None
    invoiceGuid: Optional[str] = None
    sortOrder: Optional[int] = None


class TravelReimbursementAttachmentSource(Enum):
    Severa = "Severa"
    VismaScanner = "VismaScanner"
    Google = "Google"


class FlextimeModel(BaseModel):
    totalFlextimeBalance: Optional[float] = None
    monthFlextimeBalance: Optional[float] = None


class FormattingCultureModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    code: Optional[str] = None
    isActive: Optional[bool] = True


class HolidayModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    date: date
    countryGuid: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    isRecurringYearly: Optional[bool] = None
    recurringEndYear: Optional[conint(ge=1900, le=2075)] = None
    isPublicHoliday: Optional[bool] = None


class IndustryModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    code: Optional[str] = None


class InvoiceStatusModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    isReadOnly: Optional[bool] = None
    hasInvoiceNumber: Optional[bool] = None
    isSent: Optional[bool] = None
    isWaitingPayment: Optional[bool] = None
    isPaid: Optional[bool] = None
    isDefaultForCreditNote: Optional[bool] = None
    sortOrder: Optional[int] = None


class InvoiceTemplateModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    title: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    canDelete: Optional[bool] = None


class InvoiceType(Enum):
    Invoice = "Invoice"
    Reminder = "Reminder"


class InvoicePdfGetOptions(Enum):
    All = "All"
    InvoiceOnly = "InvoiceOnly"
    AttachmentAndBreakdown = "AttachmentAndBreakdown"


class PermissionProfileModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    isAccessible: Optional[bool] = None


class PriceListCurrency(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    symbol: Optional[str] = None
    code: Optional[str] = None


class KeywordCategory(Enum):
    Project = "Project"
    Contact = "Contact"
    User = "User"
    File = "File"


class ProjectKeywordModel(BaseModel):
    keyword: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    category: Optional[KeywordCategory] = "Case"


class FileKeywordModel(BaseModel):
    keyword: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    category: Optional[KeywordCategory] = "File"


class UserKeywordModel(BaseModel):
    keyword: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    category: Optional[KeywordCategory] = "User"
    userGuid: Optional[str] = None


class SearchFieldDataType(Enum):
    String = "String"
    Boolean = "Boolean"
    Integer = "Integer"
    Percentage = "Percentage"
    Numeric = "Numeric"
    Money = "Money"
    Date = "Date"
    DateTime = "DateTime"
    Time = "Time"
    Object = "Object"
    ObjectCollection = "ObjectCollection"
    IpAddress = "IpAddress"


class KpiFormulaCategory(Enum):
    Unknown = "Unknown"
    Functions = "Functions"
    Project = "Project"
    User = "User"
    Invoice = "Invoice"


class LeadSourceModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True


class MarketSegmentModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    parentMarketSegment: Optional[ModelWithName] = None


class QuickSearchOptions(Enum):
    ShowOpenProjectsSalesCasesAndCustomers = "ShowOpenProjectsSalesCasesAndCustomers"
    ShowOpenAndClosedProjectsSalesCasesAndCustomers = (
        "ShowOpenAndClosedProjectsSalesCasesAndCustomers"
    )


class ProjectNameDisplayOptions(Enum):
    ShowProjectLongName = "ShowProjectLongName"
    ShowProjectShortName = "ShowProjectShortName"


class ProjectNameDisplayFormatOptions(Enum):
    ProjectNamePhaseName = "ProjectNamePhaseName"
    CustomerNameProjectNamePhaseName = "CustomerNameProjectNamePhaseName"


class TotalRoundingType(Enum):
    AwayFromZero = "AwayFromZero"
    NearestInteger = "NearestInteger"


class Workweek(Enum):
    Monday = "Monday"
    Tuesday = "Tuesday"
    Wednesday = "Wednesday"
    Thursday = "Thursday"
    Friday = "Friday"
    Saturday = "Saturday"
    Sunday = "Sunday"


class WorkHourApprovalMode(Enum):
    None_ = "None"
    RequiredForInvoicing = "RequiredForInvoicing"
    InvoicableAlways = "InvoicableAlways"


class EntryFormat(Enum):
    StartTimeEndTime = "StartTimeEndTime"
    Quantity = "Quantity"


class ReferenceNumberDisplay(Enum):
    ReferenceNumber = "ReferenceNumber"
    Kid = "Kid"


class UserWithFirstNameLastNameModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    firstName: Optional[str] = None
    lastName: Optional[str] = None


class FreeTextModel(BaseModel):
    value: Optional[str] = None
    text: Optional[str] = None
    allowTags: Optional[bool] = None
    tagContext: Optional[str] = None


class ProductCategoryModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    code: Optional[str] = None


class WorkTypeSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    code: Optional[str] = None
    isActive: Optional[bool] = True
    isProductive: Optional[bool] = None


class SalesAccountModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    number: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    isProductDefault: Optional[bool] = None
    isWorkTypeDefault: Optional[bool] = None
    isTravelTypeDefault: Optional[bool] = None


class ParticipantType(Enum):
    User = "User"
    Contact = "Contact"
    Resource = "Resource"
    Other = "Other"


class MemberStatus(Enum):
    Unknown = "Unknown"
    Invited = "Invited"
    Accepted = "Accepted"
    Tentative = "Tentative"
    Declined = "Declined"


class FlatrateProjectSubModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    number: Optional[int] = None


class BillingScheduleType(Enum):
    Immediately = "Immediately"
    WhenPhaseCompleted = "WhenPhaseCompleted"
    OnDate = "OnDate"


class CurrencyPurpose(Enum):
    ProjectPrice = "ProjectPrice"
    ProjectCost = "ProjectCost"
    UserCost = "UserCost"
    ExpenseCost = "ExpenseCost"


class ContactKeywordModel(BaseModel):
    keyword: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    category: Optional[KeywordCategory] = "Contact"


class ModelBase(BaseModel):
    guid: Optional[str] = None


class TemplateFreeTextModel(BaseModel):
    value: Optional[str] = None
    allowTags: Optional[bool] = None
    tagContext: Optional[str] = None


class InvoiceGrouping(Enum):
    OneByOne = "OneByOne"
    Group = "Group"
    Group_Attachment = "Group+Attachment"


class InvoiceSkin(Enum):
    BlackAndWhite = "BlackAndWhite"
    Blue = "Blue"
    Cyan = "Cyan"
    Green = "Green"
    Lilac = "Lilac"
    Orange = "Orange"
    Plain = "Plain"
    Red = "Red"
    Yellow = "Yellow"


class SimpleInputRequiredModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]


class ProjectSubModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    number: Optional[int] = None


class TypeOfProduct(Enum):
    OwnWork = "OwnWork"
    Products = "Products"
    Subcontracting = "Subcontracting"
    Travels = "Travels"


class ProjectProductInputModel(BaseModel):
    guid: Optional[str] = None
    project: SimpleInputRequiredModel
    product: SimpleInputRequiredModel


class SimpleInputModel(BaseModel):
    guid: Optional[str] = None


class MoneyInputModel(BaseModel):
    amount: float
    currencyCode: Annotated[str, Field(min_length=1)]


class ProposalSubtotalOutputModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    proposal: Optional[ModelBase] = None
    phase: Optional[ModelBase] = None
    projectFee: Optional[ModelBase] = None
    description: Optional[str] = None
    sortOrder: Optional[int] = None
    isShownOnProposal: Optional[bool] = None


class ProposalSubtotalInputModel(BaseModel):
    name: Annotated[str, Field(min_length=0, max_length=200)]
    proposal: SimpleInputRequiredModel
    phase: Optional[ModelBase] = None
    description: Optional[str] = None
    sortOrder: Optional[int] = None
    isShownOnProposal: Optional[bool] = True


class ProposalFeeRowInputModel(BaseModel):
    name: Annotated[str, Field(min_length=0, max_length=200)]
    product: Optional[SimpleInputModel] = None
    projectFee: Optional[SimpleInputModel] = None
    proposal: SimpleInputRequiredModel
    subtotal: Optional[SimpleInputModel] = None
    description: Optional[str] = None
    quantity: float
    measurementUnit: Optional[str] = None
    unitPrice: Optional[MoneyInputModel] = None
    unitCost: Optional[MoneyInputModel] = None
    sortOrder: Optional[int] = None
    isShownOnProposal: Optional[bool] = True
    vatRate: Optional[float] = None


class ProposalStatusOutputModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    isActive: Optional[bool] = None
    sortOrder: Optional[int] = None
    isWon: Optional[bool] = None
    isLost: Optional[bool] = None
    isDefault: Optional[bool] = None


class UsageModel2(BaseModel):
    context: Optional[str] = None
    count: Optional[int] = None


class ProposalStatusInputModel(BaseModel):
    name: Annotated[str, Field(min_length=0, max_length=200)]
    isActive: Optional[bool] = True
    sortOrder: Optional[int] = None
    isWon: Optional[bool] = None
    isLost: Optional[bool] = None
    isDefault: Optional[bool] = None


class ProposalLanguageSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    code: Optional[str] = None


class FormattingCultureSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    code: Optional[str] = None


class ProposalCustomerSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class CustomerContactPersonSubModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None


class ProposalProjectSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class ProposalBillingAddressSubModel(BaseModel):
    guid: Optional[str] = None
    addressline: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None


class FreeTextModel2(BaseModel):
    value: Optional[str] = None
    text: Optional[str] = None
    plainText: Optional[str] = None
    allowTags: Optional[bool] = None
    tagContext: Optional[str] = None


class FreeTextInputModel(BaseModel):
    value: Optional[str] = None


class PrintToPdf(Enum):
    DoNotPrintToProposal = "DoNotPrintToProposal"
    PrintToProposalBottom = "PrintToProposalBottom"
    PrintToProposalBoth = "PrintToProposalBoth"


class ProposalWorkhourRowInputModel(BaseModel):
    name: Annotated[str, Field(min_length=0, max_length=200)]
    quantity: float
    workType: SimpleInputRequiredModel
    proposal: SimpleInputRequiredModel
    phase: Optional[SimpleInputModel] = None
    subtotal: Optional[SimpleInputModel] = None
    description: Optional[str] = None
    sortOrder: Optional[int] = None
    isShownOnProposal: Optional[bool] = True


class ProjectSalesNoteOutputModel(BaseModel):
    note: Optional[str] = None
    isDeleted: Optional[bool] = None
    user: Optional[ModelBase] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[ModelBase] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[ModelBase] = None
    guid: Optional[str] = None
    project: Optional[ModelBase] = None


class CustomerSalesNoteOutputModel(BaseModel):
    note: Optional[str] = None
    isDeleted: Optional[bool] = None
    user: Optional[ModelBase] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[ModelBase] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[ModelBase] = None
    guid: Optional[str] = None
    customer: Optional[ModelBase] = None


class SalesNoteOutputModel(BaseModel):
    note: Optional[str] = None
    isDeleted: Optional[bool] = None
    user: Optional[ModelBase] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[ModelBase] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[ModelBase] = None
    guid: Optional[str] = None
    project: Optional[ModelBase] = None
    customer: Optional[ModelBase] = None


class ProjectSalesNoteInputModel(BaseModel):
    user: SimpleInputRequiredModel
    note: Optional[str] = None
    project: SimpleInputRequiredModel


class CustomerSalesNoteInputModel(BaseModel):
    user: SimpleInputRequiredModel
    note: Optional[str] = None
    customer: SimpleInputRequiredModel


class UserWithPhotoFileModelAndRequiredGuid(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    code: Optional[str] = None


class CustomPropertyType(Enum):
    Unknown = "Unknown"
    Numeric = "Numeric"
    Money = "Money"
    Percentage = "Percentage"
    NumericRange = "NumericRange"
    String = "String"
    Date = "Date"
    Time = "Time"
    DateTime = "DateTime"
    TimePeriod = "TimePeriod"
    Duration = "Duration"
    Boolean = "Boolean"
    Selection = "Selection"
    Url = "Url"
    Email = "Email"


class CustomPropertyShortModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    type: Optional[CustomPropertyType] = None
    parameters: Optional[str] = None


class ProjectCustomValueModel(BaseModel):
    customProperty: CustomPropertyShortModel
    value: Optional[str] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    projectGuid: Optional[str] = None


class ActivityCategory(Enum):
    Personal = "Personal"
    Absences = "Absences"
    CalendarEntry = "CalendarEntry"
    SalesEvent = "SalesEvent"
    Task = "Task"


class InvoiceStatusSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    isSent: Optional[bool] = None
    isWaitingPayment: Optional[bool] = None
    isPaid: Optional[bool] = None


class InvoiceCustomerSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class InvoiceProjectSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class CurrencySubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    code: Optional[str] = None
    symbol: Optional[str] = None


class InvoiceReceiverAddressSubModel(BaseModel):
    addressline: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    state: Optional[str] = None
    country: Optional[str] = None


class InvoiceSenderAddressSubModel(BaseModel):
    addressline: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    state: Optional[str] = None
    country: Optional[str] = None


class RelatedInvoiceSubModel(BaseModel):
    guid: Optional[str] = None
    number: Optional[int] = None


class FormattingCultureSubModel2(BaseModel):
    name: Optional[str] = None
    englishName: Optional[str] = None
    code: Optional[str] = None


class InvoiceLanguageSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    code: Optional[str] = None


class CreateInvoiceProjectModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]


class CustomerLanguage(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    code: Optional[str] = None


class CustomerCurrency(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    symbol: Optional[str] = None
    code: Optional[str] = None


class CustomerHeadquarterAddress(BaseModel):
    guid: Optional[str] = None
    addressline: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None


class CustomerInvoicingVat(BaseModel):
    guid: Optional[str] = None
    percentage: Optional[float] = None
    code: Optional[str] = None


class InvoiceSettingsOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    entryDate: Optional[date] = None
    paymentDate: Optional[date] = None
    isReverseCharged: Optional[bool] = None
    reverseChargeDescription: Optional[str] = None
    style: Optional[InvoiceSkin] = None
    showLogoAndTitle: Optional[bool] = None
    showFooter: Optional[bool] = None
    showQuantity: Optional[bool] = None
    showUnit: Optional[bool] = None
    showUnitPrice: Optional[bool] = None
    showValueAddedTax: Optional[bool] = None
    showPriceExcludingValueAddedTax: Optional[bool] = None
    showAttachmentQuantity: Optional[bool] = None
    showAttachmentUnit: Optional[bool] = None
    showAttachmentUnitPrice: Optional[bool] = None
    showAttachmentValueAddedTax: Optional[bool] = None
    showAttachmentPriceExcludingValueAddedTax: Optional[bool] = None
    workHourDescriptionFormat: Optional[str] = ""
    projectTravelExpenseDescriptionFormat: Optional[str] = ""
    projectFeeDescriptionFormat: Optional[str] = ""
    workHourGrouping: Optional[InvoiceGrouping] = None
    projectFeeGrouping: Optional[InvoiceGrouping] = None
    projectTravelExpenseGrouping: Optional[InvoiceGrouping] = None
    workHourPrimaryGroupBy: Optional[str] = None
    workHourSecondaryGroupBy: Optional[str] = None
    projectFeePrimaryGroupBy: Optional[str] = None
    projectFeeSecondaryGroupBy: Optional[str] = None
    projectTravelExpensePrimaryGroupBy: Optional[str] = None
    projectTravelExpenseSecondaryGroupBy: Optional[str] = None
    showCategories: Optional[bool] = True
    categorySortOrder: Optional[str] = None
    showReferenceNumber: Optional[bool] = True


class InvoiceRowType(Enum):
    FlatRate = "FlatRate"
    Hours = "Hours"
    ProjectFees = "ProjectFees"
    TravelExpenses = "TravelExpenses"


class InvoiceRowAccountingSubModel(BaseModel):
    number: Optional[str] = None
    name: Optional[str] = None


class InvoiceRowCategory(Enum):
    Hours = "Hours"
    ProjectFees = "ProjectFees"
    Travels = "Travels"


class LanguageModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    code: Optional[str] = None
    isInvoiceLanguage: Optional[bool] = None


class OrganizationDetailsCountrySubModel(BaseModel):
    name: Optional[str] = None
    code: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None


class UserWithNameAndPhotoFileModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    code: Optional[str] = None


class OrganizationDetailsLanguageSubModel(BaseModel):
    name: Optional[str] = None
    code: Optional[str] = None
    guid: Optional[str] = None


class OrganizationDetailsFormattingSubModel(BaseModel):
    name: Optional[str] = None
    code: Optional[str] = None
    guid: Optional[str] = None


class CompanyCountry(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    code3: Optional[str] = None
    englishName: Optional[str] = None


class PhaseMemberOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    user: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    currentWorkContractTitle: Optional[str] = None
    phase: Optional[ModelWithName] = None


class DeletedPhaseMemberOutputModel(BaseModel):
    deletedDateTime: Optional[datetime] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    user: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    currentWorkContractTitle: Optional[str] = None
    phase: Optional[ModelBase] = None


class ModelBaseReadOnly(BaseModel):
    guid: Optional[str] = None


class PhaseProjectSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    number: Optional[int] = None
    isInternal: Optional[bool] = None
    isClosed: Optional[bool] = None


class PhaseStatusOutputModel(BaseModel):
    description: Optional[str] = None
    phaseStatusTypeGuid: Optional[str] = None
    name: Optional[str] = None


class PhaseStatusInputModel(BaseModel):
    description: Optional[str] = None
    phaseStatusTypeGuid: Optional[str] = None


class PhaseCustomerSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None
    isInternal: Optional[bool] = None


class ActivityActivityType(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    category: Optional[ActivityCategory] = None


class ActivityOwnerKeyword(BaseModel):
    guid: Optional[str] = None
    value: Optional[str] = None


class ActivityCustomer(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class ActivityPhase(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    isLocked: Optional[bool] = None
    projectGuid: Optional[str] = None
    projectName: Optional[str] = None
    projectNumber: Optional[int] = None
    projectOwnerGuid: Optional[str] = None


class RecurrenceFrequency(Enum):
    Daily = "Daily"
    Weekly = "Weekly"
    Monthly = "Monthly"
    Yearly = "Yearly"


class DailyModel(BaseModel):
    interval: Optional[int] = None
    everyWeekday: Optional[bool] = None


class WeeklyModel(BaseModel):
    interval: Optional[int] = None
    monday: Optional[bool] = None
    tuesday: Optional[bool] = None
    wednesday: Optional[bool] = None
    thursday: Optional[bool] = None
    friday: Optional[bool] = None
    saturday: Optional[bool] = None
    sunday: Optional[bool] = None


class DayOrdinal(Enum):
    First = "First"
    Second = "Second"
    Third = "Third"
    Fourth = "Fourth"
    Last = "Last"


class DayOrdinalOption(Enum):
    Sunday = "Sunday"
    Monday = "Monday"
    Tuesday = "Tuesday"
    Wednesday = "Wednesday"
    Thursday = "Thursday"
    Friday = "Friday"
    WeekDay = "WeekDay"
    Saturday = "Saturday"
    WeekendDay = "WeekendDay"
    Day = "Day"


class Months(Enum):
    January = "January"
    February = "February"
    March = "March"
    April = "April"
    May = "May"
    June = "June"
    July = "July"
    August = "August"
    September = "September"
    October = "October"
    November = "November"
    December = "December"


class RecurrenceRange(BaseModel):
    maxOccurrences: Optional[int] = None
    recursUntilDate: Optional[date] = None


class RecurrenceType(Enum):
    None_ = "None"
    Occurrence = "Occurrence"
    Exception = "Exception"
    Series = "Series"


class PhaseStatusTypeModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    sortOrder: Optional[int] = None
    isActive: Optional[bool] = True
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None


class ProjectFeeProjectSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    companyGuid: Optional[str] = None


class ProjectFeeCustomerSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class ProjectFeeProductSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    code: Optional[str] = None


class ProductType(Enum):
    FixedFees = "FixedFees"
    Materials = "Materials"
    Subcontracting = "Subcontracting"


class UserSubModel(BaseModel):
    code: Optional[str] = None
    name: Optional[str] = None
    guid: Optional[str] = None
    companyGuid: Optional[str] = None


class ProjectCostCenterSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    identifier: Optional[str] = None


class ProjectSalesAccountSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[str] = None


class ProjectFeeBillingScheduleType(Enum):
    Immediately = "Immediately"
    OnDate = "OnDate"
    WhenPhaseCompleted = "WhenPhaseCompleted"
    Recurring = "Recurring"


class ProjectFeePhaseSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    isCompleted: Optional[bool] = None


class ProjectFeeInvoiceSubModel(BaseModel):
    guid: Optional[str] = None
    date: Optional[date] = None
    number: Optional[int] = None


class DeletedProjectFeeModel(BaseModel):
    deletedDateTime: Optional[datetime] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[ModelBaseReadOnly] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[ModelBaseReadOnly] = None
    guid: Optional[str] = None
    phase: Optional[ModelBaseReadOnly] = None
    project: Optional[ModelBaseReadOnly] = None
    customer: Optional[ModelBaseReadOnly] = None
    user: Optional[ModelBaseReadOnly] = None
    product: Optional[ModelBaseReadOnly] = None
    name: Optional[str] = None
    eventDate: Optional[date] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None


class ProductSalesAccountSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[str] = None


class ProductCountrySettingsModel(BaseModel):
    country: ModelBaseWithRequiredGuid
    product: ModelBaseWithRequiredGuid
    vatRate: Optional[float] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None


class BillingCustomerModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    eInvoiceAddress: Optional[str] = None
    eInvoiceOperator: Optional[str] = None


class ProjectStatusSubModel(BaseModel):
    name: Optional[str] = None
    description: Optional[str] = None
    projectStatusTypeGuid: Optional[str] = None
    guid: Optional[str] = None


class ProjectCustomerSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    number: Optional[int] = None


class BusinessUnitSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    companyGuid: Optional[str] = None
    companyName: Optional[str] = None
    companyBusinessUnitGuid: Optional[str] = None
    companyCountryGuid: Optional[str] = None
    companyCurrencyGuid: Optional[str] = None
    code: Optional[str] = None


class CurrencySubModel2(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    code: Optional[str] = None
    symbol: Optional[str] = None


class CustomerContactSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None
    isDeleted: Optional[bool] = None


class SalesStatusSubModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    salesStatusTypeGuid: Optional[str] = None


class ProjectPricelistSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    isCustom: Optional[bool] = None
    isVolumePricing: Optional[bool] = None


class ProjectInvoiceTemplateSubModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    templateInvoiceGuid: Optional[str] = None


class InvoiceTemplateSubModel(BaseModel):
    guid: Optional[str] = None
    templateInvoiceGuid: Optional[str] = None


class SimpleSalesStatusInputModel(BaseModel):
    salesStatusTypeGuid: Optional[str] = None


class SimpleProjectStatusInputModel(BaseModel):
    projectStatusTypeGuid: Optional[str] = None
    description: Optional[str] = None


class MoneyInputModelWithNullableAmount(BaseModel):
    amount: Optional[float] = None
    currencyCode: Annotated[str, Field(min_length=1)]


class ProjectTravelExpenseProjectSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    companyGuid: Optional[str] = None
    isInternal: Optional[bool] = None
    number: Optional[int] = None


class UserRequiredSubModel(BaseModel):
    code: Optional[str] = None
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    companyGuid: Optional[str] = None


class ExpensesClass(Enum):
    Mileage = "Mileage"
    DailyAllowance = "DailyAllowance"
    OtherTravelExpense = "OtherTravelExpense"


class TravelReimbursementSubModel(BaseModel):
    guid: Optional[str] = None
    isApproved: Optional[bool] = None
    isLocked: Optional[bool] = None
    status: Optional[str] = None


class ProjectTravelExpenseBillingScheduleType(Enum):
    Immediately = "Immediately"
    WhenPhaseCompleted = "WhenPhaseCompleted"
    OnDate = "OnDate"


class InvoiceSubModel(BaseModel):
    guid: Optional[str] = None
    date: Optional[date] = None
    number: Optional[int] = None


class DeletedProjectTravelExpenseModel(BaseModel):
    deletedDateTime: Optional[datetime] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[ModelBaseReadOnly] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[ModelBaseReadOnly] = None
    guid: Optional[str] = None
    phase: Optional[ModelBaseReadOnly] = None
    project: Optional[ModelBaseReadOnly] = None
    customer: Optional[ModelBaseReadOnly] = None
    user: Optional[ModelBaseReadOnly] = None
    travelExpense: Optional[ModelBaseReadOnly] = None
    description: Optional[str] = None
    eventDate: Optional[date] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    travelStartTime: Optional[datetime] = None
    travelEndTime: Optional[datetime] = None


class PublicAuthenticationOutputModel(BaseModel):
    access_token: Optional[str] = None
    scope: Optional[str] = None
    refresh_token: Optional[str] = None
    refresh_token_expires_in: Optional[int] = None
    refresh_token_expires_utc: Optional[datetime] = None
    access_token_type: Optional[str] = None
    access_token_expires_in: Optional[int] = None
    access_token_expires_utc: Optional[datetime] = None


class ClientCredentials(BaseModel):
    client_id: Annotated[str, Field(min_length=1)]
    client_secret: Annotated[str, Field(min_length=1)]
    scope: Optional[str] = None


class GrantType(Enum):
    client_credentials = "client_credentials"
    authorization_code = "authorization_code"
    refresh_token = "refresh_token"


class ReimbursedProjectFeeProjectSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[str] = None


class SalesStatusType(Enum):
    InProgress = "InProgress"
    Won = "Won"
    Lost = "Lost"


class SalesStatusTypeInputModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    salesState: SalesStatusType
    defaultProbability: Optional[int] = None
    isProposalDefault: Optional[bool] = False


class TravelExpenseTypeCountrySettingsModel(BaseModel):
    country: ModelBaseWithRequiredGuid
    product: ModelBaseWithRequiredGuid
    vatRate: Optional[float] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    purchaseVatRate: Optional[float] = None


class UserCountrySubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    code3: Optional[str] = None
    englishName: Optional[str] = None
    hasRegions: Optional[CountryRegionsStatus] = None


class UserCultureSubModel(BaseModel):
    code: Optional[str] = None
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None


class UserLanguageSubModel(BaseModel):
    code: Optional[str] = None
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None


class TimezoneModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    systemName: Optional[str] = None
    ianaName: Optional[str] = None


class UserKeywordSubModel(BaseModel):
    value: Optional[str] = None


class UserType(Enum):
    FullUser = "FullUser"
    Employee = "Employee"
    RestrictedEmployee = "RestrictedEmployee"
    Subcontractor = "Subcontractor"


class GetUsersPurpose(Enum):
    AbsenceOwner = "AbsenceOwner"
    AccountOwner = "AccountOwner"
    ActivityOwner = "ActivityOwner"
    ActivityParticipant = "ActivityParticipant"
    BillingContact = "BillingContact"
    ProjectManager = "ProjectManager"
    SalesPerson = "SalesPerson"
    SuperiorUser = "SuperiorUser"
    TermsOfServiceApprover = "TermsOfServiceApprover"


class GroupByType(Enum):
    None_ = "None"
    Date = "Date"
    Category = "Category"
    Project = "Project"


class TravelReimbursementInputModel(BaseModel):
    title: Optional[str] = None
    advancePayment: Optional[MoneyInputModelWithNullableAmount] = None
    groupBy: Optional[GroupByType] = None
    travelReimbursementStatus: Optional[SimpleInputModel] = None
    user: ModelBaseWithRequiredGuid


class WorkdayModel(BaseModel):
    date: Optional[date] = None
    userGuid: Optional[str] = None
    isReadOnly: Optional[bool] = None
    isCompleted: Optional[bool] = None
    isOvertimeAllowed: Optional[bool] = None
    expectedHours: Optional[float] = None
    enteredHours: Optional[float] = None
    isHoliday: Optional[bool] = None
    holidayName: Optional[str] = None
    flextimeLimitPerDay: Optional[float] = None
    absenceHours: Optional[float] = None
    incompleteTimingMinutes: Optional[int] = None
    enteredTimeEntries: Optional[float] = None


class VatRateOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    percentage: Optional[float] = None
    code: Optional[Annotated[str, Field(min_length=0, max_length=10)]] = None
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    countryGuid: Optional[str] = None


class VatRateInputModel(BaseModel):
    percentage: float
    code: Optional[Annotated[str, Field(min_length=0, max_length=10)]] = None
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    countryGuid: Optional[str] = None


class WorkHourPhaseSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    isCompleted: Optional[bool] = None
    isLocked: Optional[bool] = None


class WorkHourCustomerSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class WorkHourWorkTypeSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    code: Optional[str] = None


class WorkHourInvoiceSubModel(BaseModel):
    guid: Optional[str] = None
    date: Optional[date] = None
    number: Optional[int] = None


class BillableStatusType(Enum):
    Billable = "Billable"
    NotBillable = "NotBillable"
    RemovedFromInvoice = "RemovedFromInvoice"


class UserWithFirstNameLastNamePhotoFileModelAndRequiredGuid(BaseModel):
    code: Optional[str] = None
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    firstName: Optional[str] = None
    lastName: Optional[str] = None


class WorkHourProjectSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None
    companyGuid: Optional[str] = None
    isClosed: Optional[bool] = None


class DeletedWorkHourModel(BaseModel):
    deletedDateTime: Optional[datetime] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[ModelBaseReadOnly] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[ModelBaseReadOnly] = None
    guid: Optional[str] = None
    phase: Optional[ModelBaseReadOnly] = None
    project: Optional[ModelBaseReadOnly] = None
    customer: Optional[ModelBaseReadOnly] = None
    user: Optional[ModelBaseReadOnly] = None
    workType: Optional[ModelBaseReadOnly] = None
    eventDate: Optional[date] = None
    quantity: Optional[float] = None
    plannedInvoiceQuantity: Optional[float] = None
    startTime: Optional[datetime] = None
    endTime: Optional[datetime] = None


class WorkHourInputModel(BaseModel):
    description: Optional[str] = None
    endTime: Optional[datetime] = None
    eventDate: date
    invoice: Optional[SimpleInputModel] = None
    invoiceQuantity: Optional[float] = None
    plannedInvoiceQuantity: Optional[float] = None
    invoiceRowComment: Optional[str] = None
    invoiceRowDescription: Optional[str] = None
    isApproved: Optional[bool] = None
    isBillable: Optional[bool] = None
    overtime: Optional[SimpleInputModel] = None
    phase: SimpleInputRequiredModel
    quantity: Optional[float] = None
    startTime: Optional[datetime] = None
    unitPrice: Optional[MoneyInputModel] = None
    user: SimpleInputRequiredModel
    workType: SimpleInputRequiredModel


class ProjectStatusTypeModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    sortOrder: Optional[int] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None


class SalesStatusHistoryOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    salesStatusType: Optional[ModelWithName] = None
    project: Optional[ModelWithName] = None
    timeStamp: Optional[datetime] = None


class ProjectForecastInputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    project: SimpleInputRequiredModel
    month: conint(ge=1, le=12)
    year: conint(ge=1900, le=2075)
    billingForecast: Optional[MoneyInputModelWithNullableAmount] = None
    billingForecastNotes: Optional[str] = None
    expenseForecast: Optional[MoneyInputModelWithNullableAmount] = None
    expenseForecastNotes: Optional[str] = None
    revenueForecast: Optional[MoneyInputModelWithNullableAmount] = None
    revenueForecastNotes: Optional[str] = None
    laborExpenseForecast: Optional[MoneyInputModelWithNullableAmount] = None
    laborExpenseForecastNotes: Optional[str] = None


class BankAccountFormat(Enum):
    Iban = "Iban"
    Bankgiro = "Bankgiro"


class CurrencyOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    name: Optional[str] = None
    code: Optional[str] = None
    rate: Optional[float] = None
    symbol: Optional[str] = None
    isActive: Optional[bool] = True
    isOrganizationCurrency: Optional[bool] = None


class FlatRateInputModel(BaseModel):
    phase: SimpleInputRequiredModel
    billingSchedule: BillingScheduleType
    plannedBillingDate: Optional[date] = None
    price: Optional[MoneyInputModelWithNullableAmount] = None
    includesHours: Optional[float] = 0
    billAdditionalHours: Optional[bool] = True
    pricePerAdditionalHour: Optional[MoneyInputModelWithNullableAmount] = None


class PricelistVersionOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    pricelistGuid: Optional[str] = None
    startDate: Optional[date] = None


class PriceSource(Enum):
    ProductRegistry = "ProductRegistry"
    Pricelist = "Pricelist"
    Project = "Project"


class ProductPriceProductOutputSubModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    productCode: Optional[str] = None
    productType: Optional[ProductType] = None
    productCategory: Optional[ModelWithName] = None


class ProductInputModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    code: Optional[str] = None
    unitPrice: Optional[MoneyInputModelWithNullableAmount] = None
    unitCost: Optional[MoneyInputModelWithNullableAmount] = None
    vatRate: Optional[float] = None
    measurementUnit: Optional[str] = None
    isActive: Optional[bool] = True
    productCategory: Optional[SimpleInputModel] = None
    salesAccount: Optional[SimpleInputModel] = None
    type: Optional[ProductType] = None
    proposalDescription: Optional[str] = None


class ProjectFeeInputModel(BaseModel):
    name: Optional[str] = None
    billingDependencyPhase: Optional[SimpleInputModel] = None
    billingSchedule: Optional[ProjectFeeBillingScheduleType] = None
    costCenter: Optional[SimpleInputModel] = None
    description: Optional[str] = None
    displayPeriodStartDate: Optional[date] = None
    eventDate: Optional[date] = None
    hasVolumePricing: Optional[bool] = None
    invoice: Optional[SimpleInputModel] = None
    invoiceQuantity: Optional[float] = None
    invoiceRowComment: Optional[str] = None
    invoiceRowDescription: Optional[str] = None
    isBillable: Optional[bool] = None
    measurementUnit: Optional[str] = None
    phase: Optional[SimpleInputModel] = None
    plannedBillingDate: Optional[date] = None
    product: Optional[SimpleInputModel] = None
    productType: Optional[ProductType] = None
    project: SimpleInputRequiredModel
    quantity: Optional[float] = None
    salesAccount: Optional[SimpleInputModel] = None
    unitCost: Optional[MoneyInputModelWithNullableAmount] = None
    unitPrice: Optional[MoneyInputModelWithNullableAmount] = None
    user: Optional[SimpleInputModel] = None
    vatRate: Optional[float] = None


class ProjectMemberCostExceptionProjectCustomerSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    number: Optional[int] = None


class ProjectMemberCostExceptionProjectSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    number: Optional[int] = None
    isClosed: Optional[bool] = None


class ProjectMemberCostExceptionInputModel(BaseModel):
    user: SimpleInputRequiredModel
    project: SimpleInputRequiredModel
    cost: Optional[MoneyInputModelWithNullableAmount] = None


class RecurrenceEndTypes(Enum):
    Never = "Never"
    AfterNumberOfTimes = "AfterNumberOfTimes"
    OnDate = "OnDate"


class BillablePeriod(Enum):
    Any = "Any"
    Past = "Past"
    Future = "Future"
    NowAndPast = "NowAndPast"
    NowAndFuture = "NowAndFuture"


class ProjectRecurringFeeRuleInputModel(BaseModel):
    frequency: int
    recurrenceStartDate: Optional[date] = None
    recurrenceEndType: Optional[RecurrenceEndTypes] = None
    recurrenceEndDate: Optional[date] = None
    recurrenceTimes: Optional[int] = None
    recurringSalesAccount: Optional[SimpleInputModel] = None
    isActive: Optional[bool] = True
    project: SimpleInputRequiredModel
    phase: Optional[SimpleInputModel] = None
    product: Optional[SimpleInputModel] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyInputModelWithNullableAmount] = None
    unitCost: Optional[MoneyInputModelWithNullableAmount] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    hasVolumePricing: Optional[bool] = None
    productType: Optional[ProductType] = None
    vatRate: Optional[float] = None
    displayPeriodStartDate: Optional[date] = None
    user: Optional[SimpleInputModel] = None
    costCenter: Optional[SimpleInputModel] = None
    salesAccount: Optional[SimpleInputModel] = None


class ProjectTravelExpenseInputModel(BaseModel):
    billingDependencyPhase: Optional[SimpleInputModel] = None
    billingSchedule: Optional[ProjectTravelExpenseBillingScheduleType] = None
    costAccount: Optional[SimpleInputModel] = None
    costCenter: Optional[SimpleInputModel] = None
    description: Optional[str] = None
    eventDate: Optional[date] = None
    invoice: Optional[SimpleInputModel] = None
    invoiceQuantity: Optional[float] = None
    invoiceRowComment: Optional[str] = None
    invoiceRowDescription: Optional[str] = None
    isBillable: Optional[bool] = None
    measurementUnit: Optional[str] = None
    phase: SimpleInputRequiredModel
    plannedBillingDate: Optional[date] = None
    project: SimpleInputRequiredModel
    purchaseVatRate: Optional[float] = None
    quantity: float
    salesAccount: Optional[SimpleInputModel] = None
    travelEndTime: Optional[datetime] = None
    travelExpense: SimpleInputRequiredModel
    travelReimbursement: Optional[SimpleInputModel] = None
    travelReimbursementRequired: Optional[bool] = True
    travelStartTime: Optional[datetime] = None
    unitCost: Optional[MoneyInputModel] = None
    unitPrice: Optional[MoneyInputModel] = None
    user: SimpleInputRequiredModel
    vatRate: Optional[float] = None


class ReimbursedWorkHourProjectSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class TravelExpenseCostAccountSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[str] = None


class ProductSalesAccountSubModel2(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[str] = None


class TravelExpenseTypeInputModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    expenseClass: ExpensesClass
    purchaseVatRate: Optional[float] = None
    includeTime: Optional[bool] = None
    costAccount: Optional[SimpleInputModel] = None
    unitCost: MoneyInputModelWithNullableAmount
    code: Optional[str] = None
    vatRate: Optional[float] = None
    measurementUnit: Optional[str] = None
    isActive: Optional[bool] = True
    productCategory: Optional[SimpleInputModel] = None
    salesAccount: Optional[SimpleInputModel] = None


class TravelPriceProductSubModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    productCode: Optional[str] = None
    expenseClass: Optional[ExpensesClass] = None


class UserInputModel(BaseModel):
    firstName: Annotated[str, Field(min_length=1, max_length=100)]
    lastName: Annotated[str, Field(min_length=1, max_length=100)]
    salutation: Optional[SalutationType] = None
    isActive: Optional[bool] = True
    email: Optional[str] = None
    phone: Optional[str] = None
    socialSecurityNumber: Optional[str] = None
    businessUnit: Optional[SimpleInputRequiredModel] = None
    workType: Optional[SimpleInputRequiredModel] = None
    superiorUser: Optional[SimpleInputRequiredModel] = None
    satisfaction: Optional[SatisfactionLevelType] = None
    code: Optional[str] = None
    address: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    country: Optional[SimpleInputModel] = None
    countryRegion: Optional[SimpleInputModel] = None
    culture: Optional[SimpleInputModel] = None
    language: Optional[SimpleInputModel] = None
    timezone: Optional[TimezoneModel] = None
    birthDate: Optional[datetime] = None
    bankAccountNumber: Optional[str] = None
    notes: Optional[str] = None
    defaultActivityType: Optional[SimpleInputModel] = None
    userType: Optional[UserType] = None
    permissionProfile: Optional[SimpleInputModel] = None
    createDefaultWorkContract: Optional[bool] = True


class MoneyInputModelWithNotNegativeAmount(BaseModel):
    amount: Optional[float] = None
    currencyCode: Annotated[str, Field(min_length=1)]


class WorkTypeInputModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    isProductive: Optional[bool] = None
    isDefault: Optional[bool] = None
    salesAccount: Optional[SimpleInputModel] = None
    code: Optional[str] = None
    hourCost: Optional[MoneyInputModelWithNullableAmount] = None


class VismaFinancialsCompanyModel(BaseModel):
    id: Optional[int] = None
    name: Optional[str] = None


class OvertimePriceModel(BaseModel):
    guid: Optional[str] = None
    overtime: ModelBaseWithRequiredGuid
    pricingMultiplier: Optional[float] = None
    pricelistVersionGuid: Optional[str] = None
    projectGuid: Optional[str] = None
    priceSource: Optional[PriceSource] = None


class OvertimeModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    percentage: Optional[float] = None
    isActive: Optional[bool] = True
    code: Annotated[str, Field(min_length=1)]
    includeInFlextime: Optional[bool] = None
    multipliesUnitCost: Optional[bool] = False


class PhaseMemberModel(BaseModel):
    phaseGuid: Annotated[str, Field(min_length=1)]
    user: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    workHoursIncludingChildPhases: Optional[float] = None
    workHours: Optional[float] = None
    currentWorkcontractTitle: Optional[str] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None


class PhaseMembersFromBusinessUnitUsersModel(BaseModel):
    phaseGuid: Annotated[str, Field(min_length=1)]
    businessUnitGuid: Annotated[str, Field(min_length=1)]


class ResourceAllocationAction(Enum):
    None_ = "None"
    Delete = "Delete"
    Transfer = "Transfer"


class BillingAddressModel(BaseModel):
    guid: Optional[str] = None
    addressline: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    country: Optional[str] = None


class ProjectTaskStatusModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    isDone: Optional[bool] = None
    sortOrder: Optional[int] = None


class TimeEntryProject(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    number: Optional[int] = None


class TimeEntryTypeModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    identifier: Optional[str] = None


class TravelReimbursementStatusModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    sortOrder: Optional[int] = None
    isLocked: Optional[bool] = False
    isApproved: Optional[bool] = False
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None


class ResourceAllocationProjectSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    isInternal: Optional[bool] = None
    number: Optional[int] = None


class ResourceAllocationPhaseSubModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    startDate: Optional[date] = None
    endDate: Optional[date] = None


class SalesProgress(Enum):
    None_ = "None"
    InProgress = "InProgress"
    Won = "Won"
    Lost = "Lost"


class ResourceAllocationInputModel(BaseModel):
    startDate: Optional[date] = None
    endDate: Optional[date] = None
    allocationPercentage: Optional[int] = None
    allocationHours: Optional[float] = None
    user: SimpleInputRequiredModel
    project: SimpleInputRequiredModel
    phase: Optional[SimpleInputModel] = None


class AddressCountry(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    hasRegions: Optional[CountryRegionsStatus] = None


class ExceptionLocationModel(BaseModel):
    type: Optional[ExceptionLocationTypeEnum] = None
    name: Optional[str] = None
    identifier: Optional[str] = None


class PatchOperation(BaseModel):
    op: PatchOperationType
    path: Optional[str] = None
    value: Optional[str] = None
    from_: Optional[str] = Field(None, alias="from")


class BusinessUnitModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    parentGuid: Optional[str] = None
    isActive: Optional[bool] = True
    costCenter: Optional[BusinessUnitCostCenterModel] = None
    vatNumber: Optional[str] = None
    kvkNumber: Optional[Annotated[str, Field(min_length=0, max_length=25)]] = None
    companyGuid: Optional[str] = None
    companyName: Optional[str] = None
    companyBusinessUnitGuid: Optional[str] = None
    companyCountryGuid: Optional[str] = None
    companyCurrencyGuid: Optional[str] = None
    code: Optional[str] = None


class CommunicationTypeModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    type: Optional[CommunicationMethodType] = None


class KeyValuePairOfStringAndSortDirection(BaseModel):
    key: Optional[str] = None
    value: Optional[SortDirection] = None


class ContactCommunicationModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    value: Annotated[str, Field(min_length=1)]
    isForbiddenToUse: Optional[bool] = True
    contact: ModelBaseWithRequiredGuid
    communicationType: CommunicationTypeSubModel


class ContactModel(BaseModel):
    firstName: Annotated[str, Field(min_length=1)]
    lastName: Annotated[str, Field(min_length=1)]
    salutation: Optional[SalutationType] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    name: Optional[str] = None
    description: Optional[str] = None
    jobTitle: Optional[str] = None
    isActive: Optional[bool] = True
    isDeleted: Optional[bool] = None
    customer: ContactCustomer
    addressGuid: Optional[str] = None
    phoneNumbers: Optional[List[str]] = None
    emails: Optional[List[str]] = None
    satisfactionLevel: Optional[SatisfactionLevelType] = None
    timeZone: Optional[ModelWithName] = None
    dateOfBirth: Optional[date] = None
    role: Optional[ModelWithName] = None
    language: Optional[ModelWithName] = None
    isEmailAllowed: Optional[bool] = False


class CountryModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    englishName: Optional[str] = None
    code2: Optional[str] = None
    code3: Optional[str] = None
    hasRegions: Optional[CountryRegionsStatus] = None
    companyRegisterUrl: Optional[str] = None
    isInEU: Optional[bool] = None
    defaultCulture: Optional[str] = None
    isRegistrationCountry: Optional[bool] = None
    currency: Optional[CurrencyBaseModel] = None
    defaultLanguage: Optional[CountryLanguage] = None
    timezone: Optional[CountryTimezone] = None


class CountryRegionModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    code: Optional[str] = None
    timezone: Optional[CountryRegionTimezoneModel] = None


class CustomerMarketSegmentModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    customer: Optional[ModelWithName] = None
    marketSegment: Optional[MarketSegmentSubModel] = None
    parentMarketSegment: Optional[MarketSegmentSubModel] = None


class FileModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    size: Optional[float] = None
    description: Optional[str] = None
    contentType: Optional[str] = None
    category: Optional[FileCategory] = None
    isInternal: Optional[bool] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None


class UsageModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    type: Optional[ReferenceType] = None
    isReadOnly: Optional[bool] = None


class ProjectTravelExpenseFileModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    size: Optional[float] = None
    description: Optional[str] = None
    contentType: Optional[str] = None
    category: Optional[FileCategory] = None
    isInternal: Optional[bool] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    fileGuid: Optional[str] = None
    travelExpenseGuid: Optional[str] = None
    source: Optional[TravelReimbursementAttachmentSource] = None


class PriceListModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isDefault: Optional[bool] = None
    isActive: Optional[bool] = True
    isCustom: Optional[bool] = None
    isVolumePricing: Optional[bool] = None
    currency: PriceListCurrency


class KeywordModel(BaseModel):
    keyword: Annotated[str, Field(min_length=1)]
    isActive: Optional[bool] = True
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    category: KeywordCategory


class KpiFormulaModelBase(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    unit: Optional[str] = None
    dataType: Optional[SearchFieldDataType] = None
    isActive: Optional[bool] = True
    category: Optional[KpiFormulaCategory] = None


class OrganizationSettingsModel(BaseModel):
    quickSearchSetting: Optional[QuickSearchOptions] = None
    projectNameDisplaySetting: Optional[ProjectNameDisplayOptions] = None
    displayProjectNumber: Optional[bool] = None
    projectNameDisplayFormatSetting: Optional[ProjectNameDisplayFormatOptions] = None
    nextProjectNumber: Optional[int] = None
    lastProjectNumber: Optional[int] = None
    nextCustomerNumber: Optional[int] = None
    lastCustomerNumber: Optional[int] = None
    nextTravelReimbursementNumber: Optional[int] = None
    lastTravelReimbursementNumber: Optional[int] = None
    travelReimbursementInstructions: Optional[str] = None
    isTravelExpenseImmediatelyInvoiceable: Optional[bool] = None
    travelEntryClosingDate: Optional[date] = None
    travelExpenseReimbursementStartDate: Optional[date] = None
    nextPurchaseOrderNumber: Optional[int] = None
    lastPurchaseOrderNumber: Optional[int] = None
    purchaseOrderNumberPrefix: Optional[
        Annotated[str, Field(min_length=0, max_length=20)]
    ] = None
    currencyRoundingType: Optional[TotalRoundingType] = None
    overdueInterest: Optional[float] = None
    paymentTerm: Optional[int] = None
    nextInvoiceNumber: Optional[int] = None
    lastInvoiceNumber: Optional[int] = None
    workWeek: List[Workweek]
    workHourApprovalMode: Optional[WorkHourApprovalMode] = None
    workHourEntryFormat: Optional[EntryFormat] = None
    worktimeEntryClosingDate: Optional[date] = None
    paymentReferenceNumberDisplaySetting: Optional[ReferenceNumberDisplay] = None
    uniqueIdentifierForProductsAndWorktypes: Optional[bool] = None
    isAddingNewKeywordsFromProjectAllowed: Optional[bool] = None
    isIdenticalPhaseCodesAllowed: Optional[bool] = False
    isWorkHourDescriptionMandatory: Optional[bool] = False
    setCreditNoteInvoiceNumber: Optional[bool] = None
    isCustomerSearchAllowed: Optional[bool] = None
    flextimeCalculationStartDate: Optional[date] = None
    maxFlextimeBalanceLimit: Optional[confloat(ge=0.0, le=1000.0)] = None
    minFlextimeBalanceLimit: Optional[confloat(ge=-1000.0, le=0.0)] = None
    lastFlextimeCalculationEndTime: Optional[datetime] = None
    lastFlextimeCalculationUser: Optional[UserWithFirstNameLastNameModel] = None
    defaultFooterColumn1: Optional[FreeTextModel] = None
    defaultFooterColumn2: Optional[FreeTextModel] = None
    defaultFooterColumn3: Optional[FreeTextModel] = None
    isEnteringHourPlannedInvoiceQuantityAllowed: Optional[bool] = False


class ProjectWorkTypeModel(BaseModel):
    guid: Optional[str] = None
    projectGuid: Annotated[str, Field(min_length=1)]
    worktype: WorkTypeSubModel
    isDefault: Optional[bool] = None


class ActivityParticipantModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    type: Optional[ParticipantType] = None
    participantGuid: Annotated[str, Field(min_length=1)]
    activityGuid: Annotated[str, Field(min_length=1)]
    email: Optional[str] = None
    phone: Optional[str] = None
    mobilePhone: Optional[str] = None
    status: Optional[MemberStatus] = None
    isActive: Optional[bool] = None


class MultiCurrencyInfoModel(BaseModel):
    amount: Optional[float] = None
    currencyCode: Optional[str] = None
    purpose: Optional[List[CurrencyPurpose]] = None


class ProjectInvoiceSettingsOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    project: Optional[ModelBase] = None
    freeText1: Optional[TemplateFreeTextModel] = None
    htmlText1: Optional[TemplateFreeTextModel] = None
    freeText2: Optional[TemplateFreeTextModel] = None
    htmlText2: Optional[TemplateFreeTextModel] = None
    showQuantity: Optional[bool] = None
    showUnit: Optional[bool] = None
    showUnitPrice: Optional[bool] = None
    showValueAddedTax: Optional[bool] = None
    showPriceExcludingValueAddedTax: Optional[bool] = None
    showAttachmentUnit: Optional[bool] = None
    showAttachmentUnitPrice: Optional[bool] = None
    showAttachmentValueAddedTax: Optional[bool] = None
    showAttachmentPriceExcludingValueAddedTax: Optional[bool] = None
    workHourDescriptionFormat: Optional[str] = None
    projectTravelExpenseDescriptionFormat: Optional[str] = None
    projectFeeDescriptionFormat: Optional[str] = None
    workHourGrouping: Optional[InvoiceGrouping] = None
    projectFeeGrouping: Optional[InvoiceGrouping] = None
    projectTravelExpenseGrouping: Optional[InvoiceGrouping] = None
    workHourPrimaryGroupBy: Optional[str] = None
    workHourSecondaryGroupBy: Optional[str] = None
    projectFeePrimaryGroupBy: Optional[str] = None
    projectFeeSecondaryGroupBy: Optional[str] = None
    projectTravelExpensePrimaryGroupBy: Optional[str] = None
    projectTravelExpenseSecondaryGroupBy: Optional[str] = None
    showCategories: Optional[bool] = None
    showReferenceNumber: Optional[bool] = None
    showLogoAndTitle: Optional[bool] = None
    showFooter: Optional[bool] = None
    style: Optional[InvoiceSkin] = None


class ProjectInvoiceSettingsInputModel(BaseModel):
    project: SimpleInputRequiredModel
    freeText1: Optional[TemplateFreeTextModel] = None
    htmlText1: Optional[TemplateFreeTextModel] = None
    freeText2: Optional[TemplateFreeTextModel] = None
    htmlText2: Optional[TemplateFreeTextModel] = None
    showQuantity: Optional[bool] = None
    showUnit: Optional[bool] = None
    showUnitPrice: Optional[bool] = None
    showValueAddedTax: Optional[bool] = None
    showPriceExcludingValueAddedTax: Optional[bool] = None
    showAttachmentUnit: Optional[bool] = None
    showAttachmentUnitPrice: Optional[bool] = None
    showAttachmentValueAddedTax: Optional[bool] = None
    showAttachmentPriceExcludingValueAddedTax: Optional[bool] = None
    workHourDescriptionFormat: Optional[str] = None
    projectTravelExpenseDescriptionFormat: Optional[str] = None
    projectFeeDescriptionFormat: Optional[str] = None
    workHourGrouping: Optional[InvoiceGrouping] = None
    projectFeeGrouping: Optional[InvoiceGrouping] = None
    projectTravelExpenseGrouping: Optional[InvoiceGrouping] = None
    workHourPrimaryGroupBy: Optional[str] = None
    workHourSecondaryGroupBy: Optional[str] = None
    projectFeePrimaryGroupBy: Optional[str] = None
    projectFeeSecondaryGroupBy: Optional[str] = None
    projectTravelExpensePrimaryGroupBy: Optional[str] = None
    projectTravelExpenseSecondaryGroupBy: Optional[str] = None
    showCategories: Optional[bool] = None
    showReferenceNumber: Optional[bool] = None
    showLogoAndTitle: Optional[bool] = None
    showFooter: Optional[bool] = None
    style: Optional[InvoiceSkin] = None


class ProjectProductSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    productCategory: Optional[str] = None
    productCode: Optional[str] = None
    productType: Optional[TypeOfProduct] = None
    isActive: Optional[bool] = None


class ProjectWorkHourPriceInputModel(BaseModel):
    phase: Optional[SimpleInputRequiredModel] = None
    isBillable: Optional[bool] = True
    user: Optional[SimpleInputModel] = None
    workType: Optional[SimpleInputModel] = None
    unitPrice: MoneyInputModel
    project: SimpleInputModel


class ProposalInputModel(BaseModel):
    name: Annotated[str, Field(min_length=0, max_length=50)]
    proposalDate: Optional[date] = None
    language: Optional[SimpleInputModel] = None
    culture: Optional[SimpleInputModel] = None
    customerContactPerson: Optional[SimpleInputModel] = None
    project: SimpleInputRequiredModel
    proposalStatus: Optional[SimpleInputModel] = None
    billingAddress: Optional[SimpleInputModel] = None
    freeText1: Optional[FreeTextInputModel] = None
    freeText2: Optional[FreeTextInputModel] = None


class ProposalSettingsOutputModel(BaseModel):
    isTaxFree: Optional[bool] = False
    showQuantity: Optional[bool] = True
    showUnit: Optional[bool] = True
    showUnitPrice: Optional[bool] = True
    showTotalPrice: Optional[bool] = True
    showBillingDetails: Optional[bool] = False
    showProjectMembers: Optional[bool] = False
    showGanttChart: Optional[bool] = False
    showTreeview: Optional[bool] = False
    showProjectPlan: Optional[bool] = False
    showOurReference: Optional[bool] = False
    showYourReference: Optional[bool] = False
    showOrderNumber: Optional[bool] = False
    showBillingContact: Optional[bool] = False
    showPaymentTerms: Optional[bool] = False
    style: Optional[InvoiceSkin] = None
    printTotalInPdf: Optional[PrintToPdf] = "PrintToProposalBoth"
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None


class CustomPropertyModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    type: Optional[CustomPropertyType] = "Unknown"
    parameters: Optional[str] = None
    isActive: Optional[bool] = True
    usageCount: Optional[int] = None


class CustomerCustomValueModel(BaseModel):
    customProperty: CustomPropertyShortModel
    value: Optional[str] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    customerGuid: Optional[str] = None


class ActivityTypeModel(BaseModel):
    isActive: Optional[bool] = True
    isDefault: Optional[bool] = None
    isPaidLeave: Optional[bool] = None
    category: ActivityCategory
    code: Optional[str] = None
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None


class CreateInvoiceModel(BaseModel):
    projects: List[CreateInvoiceProjectModel]
    groupProjects: Optional[bool] = None
    invoiceStatusGuid: Optional[str] = None
    billingCustomerGuid: Optional[str] = None
    date: Optional[date] = None


class CustomerModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    number: Optional[int] = None
    isActive: Optional[bool] = True
    isInternal: Optional[bool] = None
    notes: Optional[str] = None
    email: Optional[str] = None
    website: Optional[str] = None
    vatNumber: Optional[str] = None
    kvkNumber: Optional[Annotated[str, Field(min_length=0, max_length=25)]] = None
    numberOfEmployees: Optional[int] = None
    annualRevenue: Optional[int] = None
    language: Optional[CustomerLanguage] = None
    currency: Optional[CustomerCurrency] = None
    owner: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    industry: Optional[ModelWithName] = None
    headquarterAddress: Optional[CustomerHeadquarterAddress] = None
    timezone: Optional[ModelWithName] = None
    pricelist: Optional[ModelWithName] = None
    paymentTerm: Optional[int] = None
    overdueInterest: Optional[float] = None
    invoicingVat: Optional[CustomerInvoicingVat] = None
    eInvoiceAddress: Optional[str] = None
    eInvoiceOperator: Optional[str] = None
    invoiceTemplate: Optional[ModelWithName] = None


class CompanyModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    rootBusinessUnitGuid: Optional[str] = None
    country: Optional[CompanyCountry] = None
    currencyGuid: Optional[str] = None
    currencyRate: Optional[float] = None
    currencyCode: Optional[str] = None
    currencySymbol: Optional[str] = None


class PhaseOutputModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    project: Optional[PhaseProjectSubModel] = None
    parentPhase: Optional[ModelBaseWithRequiredGuid] = None
    isCompleted: Optional[bool] = False
    isLocked: Optional[bool] = False
    startDate: Optional[date] = None
    deadline: Optional[date] = None
    workHoursEstimate: Optional[float] = None
    originalWorkHoursEstimate: Optional[float] = None
    originalStartDate: Optional[date] = None
    originalDeadline: Optional[date] = None
    sortOrder: Optional[int] = None
    defaultWorkType: Optional[ModelWithName] = None
    code: Optional[str] = None
    currencyCode: Optional[CurrencyBaseModel] = None
    phaseStatus: Optional[PhaseStatusOutputModel] = None


class PhaseInputModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    project: Optional[ModelBaseWithRequiredGuid] = None
    parentPhase: ModelBaseWithRequiredGuid
    startDate: Optional[date] = None
    deadline: Optional[date] = None
    workHoursEstimate: Optional[float] = None
    originalWorkHoursEstimate: Optional[float] = None
    originalStartDate: Optional[date] = None
    originalDeadline: Optional[date] = None
    sortOrder: Optional[int] = None
    defaultWorkType: Optional[ModelWithName] = None
    code: Optional[str] = None
    phaseStatus: Optional[PhaseStatusInputModel] = None
    isCompleted: Optional[bool] = False
    isClosed: Optional[bool] = False
    isLocked: Optional[bool] = False


class PhaseModelWithHierarchyInfo(BaseModel):
    project: Optional[PhaseProjectSubModel] = None
    parentPhase: Optional[ModelBaseWithRequiredGuid] = None
    isCompleted: Optional[bool] = False
    isLocked: Optional[bool] = False
    startDate: Optional[date] = None
    deadline: Optional[date] = None
    workHoursEstimate: Optional[float] = None
    originalWorkHoursEstimate: Optional[float] = None
    originalStartDate: Optional[date] = None
    originalDeadline: Optional[date] = None
    sortOrder: Optional[int] = None
    defaultWorkType: Optional[ModelWithName] = None
    code: Optional[str] = None
    currencyCode: Optional[CurrencyBaseModel] = None
    phaseStatus: Optional[PhaseStatusOutputModel] = None
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    customer: Optional[PhaseCustomerSubModel] = None
    hasChildren: Optional[bool] = None
    level: Optional[int] = None


class ActivityOwnerModel(BaseModel):
    code: Optional[str] = None
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    keywords: Optional[List[ActivityOwnerKeyword]] = None


class MonthlyModel(BaseModel):
    interval: Optional[int] = None
    dayOfMonth: Optional[int] = None
    dayOrdinal: Optional[DayOrdinal] = None
    dayOrdinalOption: Optional[DayOrdinalOption] = None


class YearlyModel(BaseModel):
    dayOfMonth: Optional[int] = None
    month: Optional[Months] = None
    dayOrdinal: Optional[DayOrdinal] = None
    dayOrdinalOption: Optional[DayOrdinalOption] = None


class ProjectBillingCustomerModel(BaseModel):
    project: ModelBaseWithRequiredGuid
    billingCustomer: BillingCustomerModel
    isDefault: Optional[bool] = None
    canBeDeleted: Optional[bool] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None


class ProjectInputModelBase(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    customer: SimpleInputRequiredModel
    projectOwner: SimpleInputModel
    isInternal: Optional[bool] = None
    internalName: Optional[str] = None
    number: Optional[int] = None
    description: Optional[str] = None
    isClosed: Optional[bool] = None
    isJoiningAllowed: Optional[bool] = True
    businessUnit: Optional[SimpleInputRequiredModel] = None
    customerContact: Optional[SimpleInputModel] = None
    salesPerson: Optional[SimpleInputModel] = None
    startDate: Optional[date] = None
    deadline: Optional[date] = None
    leadSource: Optional[SimpleInputModel] = None
    costCenter: Optional[SimpleInputModel] = None
    paymentTerm: Optional[int] = None
    ourReference: Optional[str] = None
    yourReference: Optional[str] = None
    orderNumber: Optional[str] = None
    invoiceNotes: Optional[str] = None
    billingContact: Optional[SimpleInputModel] = None
    invoiceTemplate: Optional[InvoiceTemplateSubModel] = None
    useOvertimeMultipliers: Optional[bool] = True
    useWorktypesFromSetting: Optional[bool] = True
    useProductsFromSetting: Optional[bool] = True
    completionEstimatePercentage: Optional[int] = None
    salesStatus: Optional[SimpleSalesStatusInputModel] = None
    projectStatus: Optional[SimpleProjectStatusInputModel] = None
    currency: Optional[SimpleInputRequiredModel] = None
    probability: Optional[int] = None
    expectedOrderDate: Optional[date] = None
    expectedValue: Optional[MoneyInputModelWithNullableAmount] = None


class TravelExpenseSubModel(BaseModel):
    guid: Annotated[str, Field(min_length=1)]
    name: Optional[str] = None
    expenseClass: Optional[ExpensesClass] = None
    includeTime: Optional[bool] = None
    code: Optional[str] = None


class AccessTokenCredentials(BaseModel):
    grant_type: Optional[GrantType] = None
    code: Optional[str] = None
    redirect_uri: Optional[str] = None
    client_id: Optional[str] = None
    client_secret: Optional[str] = None
    scope: Optional[str] = None
    state: Optional[str] = None
    refresh_token: Optional[str] = None


class SalesStatusTypeOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    name: Optional[str] = None
    guid: Optional[str] = None
    isActive: Optional[bool] = None
    salesState: Optional[SalesStatusType] = None
    defaultProbability: Optional[int] = None
    isProposalDefault: Optional[bool] = None


class BankAccountOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    bankName: Annotated[str, Field(min_length=1)]
    accountNumber: Annotated[str, Field(min_length=1)]
    bic: Optional[str] = None
    accountNumberFormat: Optional[BankAccountFormat] = "Iban"
    isActive: Optional[bool] = True
    businessUnit: Optional[ModelWithName] = None
    company: Optional[ModelWithName] = None


class WorkContractInputModel(BaseModel):
    title: Annotated[str, Field(min_length=1)]
    startDate: date
    endDate: Optional[date] = None
    dailyHours: Optional[float] = None
    isOvertimeAllowed: Optional[bool] = None
    isFlextimeActive: Optional[bool] = True
    flextimeLimitPerDay: Optional[float] = None
    hourCost: MoneyInputModelWithNotNegativeAmount
    user: SimpleInputRequiredModel
    workWeek: Optional[List[Workweek]] = None


class ProjectBillingCustomerModel2(BaseModel):
    project: ModelBaseWithRequiredGuid
    billingCustomer: BillingCustomerModel
    isDefault: Optional[bool] = None
    canBeDeleted: Optional[bool] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    billingAddress: Optional[BillingAddressModel] = None
    billingContact: Optional[ModelWithName] = None


class TimeEntryModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    user: ModelBaseWithRequiredGuid
    customer: Optional[ModelWithName] = None
    project: Optional[TimeEntryProject] = None
    phase: ModelBaseWithRequiredGuid
    timeEntryType: ModelBaseWithRequiredGuid
    description: Optional[str] = None
    eventDate: date
    quantity: Optional[float] = None
    startTime: Optional[datetime] = None
    endTime: Optional[datetime] = None


class ResourceAllocationOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    startDate: Optional[date] = None
    endDate: Optional[date] = None
    derivedStartDate: Optional[date] = None
    derivedEndDate: Optional[date] = None
    allocationPercentage: Optional[int] = None
    allocationHours: Optional[float] = None
    calculatedAllocationHours: Optional[float] = None
    projectMemberGuid: Optional[str] = None
    customer: Optional[ModelWithName] = None
    user: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    project: Optional[ResourceAllocationProjectSubModel] = None
    phase: Optional[ResourceAllocationPhaseSubModel] = None


class ResourceAllocationCriteriaModel(BaseModel):
    startDate: Optional[datetime] = None
    endDate: Optional[datetime] = None
    userGuids: Optional[List[str]] = None
    userLicenseTypes: Optional[List[UserType]] = None
    phaseGuids: Optional[List[str]] = None
    projectGuids: Optional[List[str]] = None
    projectBusinessUnitGuids: Optional[List[str]] = None
    userBusinessUnitGuids: Optional[List[str]] = None
    projectManagerUserGuids: Optional[List[str]] = None
    userTagGuids: Optional[List[str]] = None
    includeAbsences: Optional[bool] = None
    useSalesProbability: Optional[bool] = True
    projectStatusTypeGuids: Optional[List[str]] = None
    projectTagGuids: Optional[List[str]] = None
    superiorUserGuids: Optional[List[str]] = None
    salesStatusTypeGuids: Optional[List[str]] = None
    salesProgresses: Optional[List[SalesProgress]] = None
    resourceAllocationGuids: Optional[List[str]] = None


class AddressModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    addressline: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    isBillingAddress: Optional[bool] = None
    isPostalAddress: Optional[bool] = None
    isVisitAddress: Optional[bool] = None
    phone: Optional[str] = None
    fax: Optional[str] = None
    country: Optional[AddressCountry] = None
    countryRegion: Optional[ModelWithName] = None
    customer: Optional[AddressCustomer] = None
    contacts: Optional[List[ModelWithName]] = None


class ExceptionDetailModel(BaseModel):
    message: Optional[str] = None
    url: Optional[str] = None
    location: Optional[ExceptionLocationModel] = None


class ProjectFileModel(BaseModel):
    name: Annotated[str, Field(min_length=1)]
    size: Optional[float] = None
    description: Optional[str] = None
    contentType: Optional[str] = None
    category: Optional[FileCategory] = None
    isInternal: Optional[bool] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    fileGuid: Optional[str] = None
    usages: Optional[List[UsageModel]] = None
    isReadOnly: Optional[bool] = None
    projectGuid: Annotated[str, Field(min_length=1)]


class MoneyOutputModel(BaseModel):
    amount: Optional[float] = None
    currencyCode: Optional[str] = None
    multiCurrencyInfo: Optional[List[MultiCurrencyInfoModel]] = None


class ProjectProductOutputModel(BaseModel):
    guid: Optional[str] = None
    project: Optional[ProjectSubModel] = None
    product: ProjectProductSubModel


class ProjectWorkHourPriceOutputModel(BaseModel):
    phase: Optional[ModelBaseWithRequiredGuid] = None
    isAvailable: Optional[bool] = None
    isBillable: Optional[bool] = None
    user: Optional[ModelWithName] = None
    workType: Optional[ModelWithName] = None
    unitPrice: Optional[MoneyOutputModel] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    project: Optional[ProjectSubModel] = None


class ProposalFeeRowOutputModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    product: Optional[ModelBase] = None
    projectFee: Optional[ModelBase] = None
    proposal: Optional[ModelBase] = None
    subtotal: Optional[ModelBase] = None
    description: Optional[str] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    sortOrder: Optional[int] = None
    isShownOnProposal: Optional[bool] = None
    vatRate: Optional[float] = None


class ProposalOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    name: Optional[str] = None
    proposalDate: Optional[date] = None
    number: Optional[str] = None
    language: Optional[ProposalLanguageSubModel] = None
    culture: Optional[FormattingCultureSubModel] = None
    customer: Optional[ProposalCustomerSubModel] = None
    customerContactPerson: Optional[CustomerContactPersonSubModel] = None
    project: Optional[ProposalProjectSubModel] = None
    proposalStatus: Optional[ModelWithName] = None
    billingAddress: Optional[ProposalBillingAddressSubModel] = None
    totalIncludingVat: Optional[MoneyOutputModel] = None
    totalExcludingVat: Optional[MoneyOutputModel] = None
    freeText1: Optional[FreeTextModel2] = None
    freeText2: Optional[FreeTextModel2] = None
    pricelist: Optional[ModelWithName] = None


class ProposalWorkhourRowOutputModel(BaseModel):
    name: Optional[str] = None
    guid: Optional[str] = None
    workType: Optional[ModelBase] = None
    phase: Optional[ModelBase] = None
    proposal: Optional[ModelBase] = None
    subtotal: Optional[ModelBase] = None
    projectFee: Optional[ModelBase] = None
    description: Optional[str] = None
    quantity: Optional[float] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    sortOrder: Optional[int] = None
    isShownOnProposal: Optional[bool] = True


class WorkContractOutputModel(BaseModel):
    title: Annotated[str, Field(min_length=1)]
    startDate: date
    endDate: Optional[date] = None
    dailyHours: Optional[float] = None
    isOvertimeAllowed: Optional[bool] = None
    isFlextimeActive: Optional[bool] = True
    flextimeLimitPerDay: Optional[float] = None
    workWeek: Optional[List[Workweek]] = None
    guid: Optional[str] = None
    hourCost: Optional[MoneyOutputModel] = None
    user: Optional[UserWithPhotoFileModelAndRequiredGuid] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None


class InvoiceOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    number: Optional[int] = None
    referenceNumber: Optional[str] = None
    status: Optional[InvoiceStatusSubModel] = None
    customer: Optional[InvoiceCustomerSubModel] = None
    projects: Optional[List[InvoiceProjectSubModel]] = None
    date: Optional[date] = None
    dueDate: Optional[date] = None
    paymentDate: Optional[date] = None
    entryDate: Optional[date] = None
    paymentTerm: Optional[int] = None
    overdueInterest: Optional[float] = None
    ourReference: Optional[str] = None
    yourReference: Optional[str] = None
    currency: Optional[CurrencySubModel] = None
    currencyRate: Optional[float] = None
    totalIncludingTax: Optional[MoneyOutputModel] = None
    totalExcludingTax: Optional[MoneyOutputModel] = None
    totalTax: Optional[MoneyOutputModel] = None
    workHoursTotalExcludingTax: Optional[MoneyOutputModel] = None
    projectFeesTotalExcludingTax: Optional[MoneyOutputModel] = None
    projectTravelExpensesTotalExcludingTax: Optional[MoneyOutputModel] = None
    flatRatesTotalExcludingTax: Optional[MoneyOutputModel] = None
    workHoursQuantity: Optional[float] = None
    receiverCustomerName: Optional[str] = None
    receiverContactGuid: Optional[str] = None
    receiverContactName: Optional[str] = None
    receiverContactEmail: Optional[str] = None
    receiverAddress: Optional[InvoiceReceiverAddressSubModel] = None
    receiverVatNumber: Optional[str] = None
    receiverKvkNumber: Optional[str] = None
    senderName: Optional[str] = None
    senderContactName: Optional[str] = None
    senderContactGuid: Optional[str] = None
    senderAddress: Optional[InvoiceSenderAddressSubModel] = None
    senderVatNumber: Optional[str] = None
    senderKvkNumber: Optional[str] = None
    isCreditNote: Optional[bool] = None
    reimburseInvoice: Optional[RelatedInvoiceSubModel] = None
    creditNoteInvoice: Optional[RelatedInvoiceSubModel] = None
    invoiceNumberBusinessUnitGuid: Optional[str] = None
    orderNumber: Optional[str] = None
    invoiceTemplate: Optional[ModelWithName] = None
    culture: Optional[FormattingCultureSubModel2] = None
    billingCustomer: Optional[InvoiceCustomerSubModel] = None
    notes: Optional[str] = None
    freeText1: Optional[FreeTextModel2] = None
    freeText2: Optional[FreeTextModel2] = None
    language: Optional[InvoiceLanguageSubModel] = None
    canBeDeleted: Optional[bool] = None
    workHourValueAddedTax: Optional[float] = None


class InvoiceRowOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    invoiceGuid: Optional[str] = None
    rowType: Optional[InvoiceRowType] = None
    description: Optional[str] = None
    quantity: Optional[float] = None
    unitPrice: Optional[MoneyOutputModel] = None
    measurementUnit: Optional[str] = None
    vatRate: Optional[float] = None
    sortOrder: Optional[int] = None
    salesAccount: Optional[InvoiceRowAccountingSubModel] = None
    recurringSalesAccount: Optional[InvoiceRowAccountingSubModel] = None
    costCenter: Optional[InvoiceRowAccountingSubModel] = None
    vatAccount: Optional[InvoiceRowAccountingSubModel] = None
    salesReceivableAccount: Optional[InvoiceRowAccountingSubModel] = None
    category: Optional[InvoiceRowCategory] = None
    flatRateGuid: Optional[str] = None
    hasInvoiceComment: Optional[bool] = None
    code: Optional[List[str]] = None


class OrganizationDetailsOutputModel(BaseModel):
    guid: Optional[str] = None
    name: Optional[str] = None
    vatNumber: Optional[str] = None
    kvkNumber: Optional[Annotated[str, Field(min_length=0, max_length=25)]] = None
    isVatRegistered: Optional[bool] = None
    registeredOffice: Optional[str] = None
    address: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    country: Optional[OrganizationDetailsCountrySubModel] = None
    phone: Optional[str] = None
    fax: Optional[str] = None
    termsOfServiceApprover: Optional[UserWithNameAndPhotoFileModel] = None
    eInvoiceAddress: Optional[str] = None
    eInvoiceOperatorCode: Optional[str] = None
    odpCompany: Optional[str] = None
    currency: Optional[CurrencyBaseModel] = None
    language: Optional[OrganizationDetailsLanguageSubModel] = None
    formatting: Optional[OrganizationDetailsFormattingSubModel] = None
    timezone: Optional[ModelWithName] = None
    activeCompanies: Optional[List[CompanyModel]] = None
    activeAddons: Optional[List[str]] = None


class RecurrencePattern(BaseModel):
    daily: Optional[DailyModel] = None
    weekly: Optional[WeeklyModel] = None
    monthly: Optional[MonthlyModel] = None
    yearly: Optional[YearlyModel] = None


class ProjectFeeOutputModel(BaseModel):
    name: Optional[str] = None
    project: Optional[ProjectFeeProjectSubModel] = None
    phase: Optional[ModelWithName] = None
    customer: Optional[ProjectFeeCustomerSubModel] = None
    product: Optional[ProjectFeeProductSubModel] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    hasVolumePricing: Optional[bool] = None
    productType: Optional[ProductType] = None
    vatRate: Optional[float] = None
    displayPeriodStartDate: Optional[date] = None
    user: Optional[UserSubModel] = None
    costCenter: Optional[ProjectCostCenterSubModel] = None
    salesAccount: Optional[ProjectSalesAccountSubModel] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    eventDate: Optional[date] = None
    billingSchedule: Optional[ProjectFeeBillingScheduleType] = None
    plannedBillingDate: Optional[date] = None
    billingDependencyPhase: Optional[ProjectFeePhaseSubModel] = None
    isBillable: Optional[bool] = None
    invoice: Optional[ProjectFeeInvoiceSubModel] = None
    invoiceRowGuid: Optional[str] = None
    invoiceRowDescription: Optional[str] = None
    invoiceQuantity: Optional[float] = None
    invoiceRowComment: Optional[str] = None
    isRecurrenceRule: Optional[bool] = None
    recurrenceRuleGuid: Optional[str] = None


class ProductOutputModel(BaseModel):
    code: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    vatRate: Optional[float] = None
    measurementUnit: Optional[str] = None
    isActive: Optional[bool] = True
    productCategory: Optional[ModelWithName] = None
    salesAccount: Optional[ProductSalesAccountSubModel] = None
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    type: Optional[ProductType] = None
    proposalDescription: Optional[str] = None


class ProductForProjectOutputModel(BaseModel):
    product: Optional[ProductOutputModel] = None
    isVolumePriced: Optional[bool] = None


class ProjectOutputModel(BaseModel):
    projectStatus: Optional[ProjectStatusSubModel] = None
    isInternal: Optional[bool] = None
    internalName: Optional[str] = None
    number: Optional[int] = None
    description: Optional[str] = None
    isClosed: Optional[bool] = None
    closedDate: Optional[date] = None
    isJoiningAllowed: Optional[bool] = True
    customer: Optional[ProjectCustomerSubModel] = None
    projectOwner: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    businessUnit: Optional[BusinessUnitSubModel] = None
    currency: Optional[CurrencySubModel2] = None
    customerContact: Optional[CustomerContactSubModel] = None
    salesStatus: Optional[SalesStatusSubModel] = None
    salesPerson: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    probability: Optional[int] = None
    expectedOrderDate: Optional[date] = None
    expectedValue: Optional[MoneyOutputModel] = None
    startDate: Optional[date] = None
    deadline: Optional[date] = None
    leadSource: Optional[ModelWithName] = None
    rootPhase: Optional[ModelWithName] = None
    pricelist: Optional[ProjectPricelistSubModel] = None
    costCenter: Optional[ProjectCostCenterSubModel] = None
    paymentTerm: Optional[int] = None
    ourReference: Optional[str] = None
    yourReference: Optional[str] = None
    orderNumber: Optional[str] = None
    invoiceNotes: Optional[str] = None
    billingContact: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    invoiceTemplate: Optional[ProjectInvoiceTemplateSubModel] = None
    useWorkTypesFromSetting: Optional[bool] = True
    defaultWorkType: Optional[ModelWithName] = None
    useProductsFromSetting: Optional[bool] = True
    isMileageBillable: Optional[bool] = None
    isDailyAllowanceBillable: Optional[bool] = None
    isOtherTravelExpensesBillable: Optional[bool] = None
    useOvertimeMultipliers: Optional[bool] = True
    keywords: Optional[List[ModelWithName]] = None
    completionEstimatePercentage: Optional[int] = None
    calculatedCompletionPercentage: Optional[int] = None
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None


class ProjectTravelExpenseOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    project: Optional[ProjectTravelExpenseProjectSubModel] = None
    phase: Optional[ModelBaseWithRequiredGuid] = None
    customer: Optional[ModelWithName] = None
    user: Optional[UserRequiredSubModel] = None
    travelExpense: Optional[TravelExpenseSubModel] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    unitCostExcludingPurchaseVat: Optional[MoneyOutputModel] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    vatRate: Optional[float] = None
    purchaseVatRate: Optional[float] = None
    eventDate: Optional[date] = None
    travelStartTime: Optional[datetime] = None
    travelEndTime: Optional[datetime] = None
    travelReimbursementRequired: Optional[bool] = True
    travelReimbursement: Optional[TravelReimbursementSubModel] = None
    isBillable: Optional[bool] = None
    billingSchedule: Optional[ProjectTravelExpenseBillingScheduleType] = None
    plannedBillingDate: Optional[date] = None
    billingDependencyPhase: Optional[ModelWithName] = None
    invoice: Optional[InvoiceSubModel] = None
    invoiceQuantity: Optional[float] = None
    invoiceRowGuid: Optional[str] = None
    invoiceRowDescription: Optional[str] = None
    invoiceRowComment: Optional[str] = None
    costAccount: Optional[ModelWithName] = None
    costCenter: Optional[ModelWithName] = None
    salesAccount: Optional[ModelWithName] = None
    attachmentCount: Optional[int] = None


class ReimbursedProjectFeeOutputModel(BaseModel):
    name: Optional[str] = None
    eventDate: Optional[date] = None
    phase: Optional[ModelWithName] = None
    project: Optional[ReimbursedProjectFeeProjectSubModel] = None
    product: Optional[ModelWithName] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    vatRate: Optional[float] = None
    user: Optional[ModelWithName] = None
    invoiceGuid: Optional[str] = None
    invoiceQuantity: Optional[float] = None
    invoiceRowGuid: Optional[str] = None
    invoiceRowDescription: Optional[str] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    productType: Optional[ProductType] = None


class UserWorkContractSubModel(BaseModel):
    title: Annotated[str, Field(min_length=1)]
    startDate: date
    endDate: Optional[date] = None
    dailyHours: Optional[float] = None
    isOvertimeAllowed: Optional[bool] = None
    isFlextimeActive: Optional[bool] = True
    flextimeLimitPerDay: Optional[float] = None
    workWeek: Optional[List[Workweek]] = None
    guid: Optional[str] = None
    hourCost: Optional[MoneyOutputModel] = None


class TravelReimbursementOutputModel(BaseModel):
    user: Optional[ModelWithName] = None
    title: Optional[str] = None
    number: Optional[int] = None
    date: Optional[datetime] = None
    approvalDate: Optional[datetime] = None
    approvedByUser: Optional[ModelWithName] = None
    advancePayment: Optional[MoneyOutputModel] = None
    total: Optional[MoneyOutputModel] = None
    totalExpenses: Optional[MoneyOutputModel] = None
    groupBy: Optional[GroupByType] = None
    canChangeApproval: Optional[bool] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    travelReimbursementStatus: Optional[ModelWithName] = None


class WorkTypeOutputModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isActive: Optional[bool] = True
    isProductive: Optional[bool] = None
    isDefault: Optional[bool] = None
    salesAccount: Optional[ModelWithName] = None
    code: Optional[str] = None
    hourCost: Optional[MoneyOutputModel] = None


class WorkHourOutputModel(BaseModel):
    phase: Optional[WorkHourPhaseSubModel] = None
    customer: Optional[WorkHourCustomerSubModel] = None
    workType: Optional[WorkHourWorkTypeSubModel] = None
    invoice: Optional[WorkHourInvoiceSubModel] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    invoiceRowDescription: Optional[str] = None
    invoiceQuantity: Optional[float] = None
    plannedInvoiceQuantity: Optional[float] = None
    isBillable: Optional[bool] = None
    billableStatus: Optional[BillableStatusType] = None
    isProductive: Optional[bool] = None
    isApproved: Optional[bool] = None
    isModifiable: Optional[bool] = None
    invoiceRowGuid: Optional[str] = None
    invoiceRowComment: Optional[str] = None
    user: Optional[UserWithFirstNameLastNamePhotoFileModelAndRequiredGuid] = None
    overtime: Optional[ModelWithName] = None
    eventDate: date
    quantity: Optional[float] = None
    startTime: Optional[datetime] = None
    endTime: Optional[datetime] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    project: Optional[WorkHourProjectSubModel] = None


class ProjectForecastOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    project: Optional[ModelBaseWithRequiredGuid] = None
    month: Optional[int] = None
    year: Optional[int] = None
    billingForecast: Optional[MoneyOutputModel] = None
    billingForecastNotes: Optional[str] = None
    expenseForecast: Optional[MoneyOutputModel] = None
    expenseForecastNotes: Optional[str] = None
    revenueForecast: Optional[MoneyOutputModel] = None
    revenueForecastNotes: Optional[str] = None
    laborExpenseForecast: Optional[MoneyOutputModel] = None
    laborExpenseForecastNotes: Optional[str] = None


class ProductPriceModel(BaseModel):
    price: Optional[MoneyOutputModel] = None
    pricelistVersionGuid: Optional[str] = None
    projectGuid: Optional[str] = None
    priceSource: Optional[PriceSource] = None
    guid: Optional[str] = None
    quantity: Optional[float] = None


class ProjectMemberCostExceptionOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    user: Optional[UserWithFirstNameLastNamePhotoFileModelAndRequiredGuid] = None
    customer: Optional[ProjectMemberCostExceptionProjectCustomerSubModel] = None
    project: Optional[ProjectMemberCostExceptionProjectSubModel] = None
    cost: Optional[MoneyOutputModel] = None


class ProjectRecurringFeeRuleOutputModel(BaseModel):
    name: Optional[str] = None
    project: Optional[ProjectFeeProjectSubModel] = None
    phase: Optional[ModelWithName] = None
    customer: Optional[ProjectFeeCustomerSubModel] = None
    product: Optional[ProjectFeeProductSubModel] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    hasVolumePricing: Optional[bool] = None
    productType: Optional[ProductType] = None
    vatRate: Optional[float] = None
    displayPeriodStartDate: Optional[date] = None
    user: Optional[UserSubModel] = None
    costCenter: Optional[ProjectCostCenterSubModel] = None
    salesAccount: Optional[ProjectSalesAccountSubModel] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    frequency: Optional[int] = None
    recurrenceStartDate: Optional[date] = None
    recurrenceEndType: Optional[RecurrenceEndTypes] = None
    recurrenceEndDate: Optional[date] = None
    recurrenceTimes: Optional[int] = None
    recurringSalesAccount: Optional[ProjectSalesAccountSubModel] = None
    generatedTimes: Optional[int] = None
    isActive: Optional[bool] = True


class ReimbursedProjectTravelExpenseOutputModel(BaseModel):
    name: Optional[str] = None
    eventDate: Optional[date] = None
    phase: Optional[ModelWithName] = None
    project: Optional[ReimbursedProjectFeeProjectSubModel] = None
    product: Optional[ModelWithName] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    quantity: Optional[float] = None
    measurementUnit: Optional[str] = None
    vatRate: Optional[float] = None
    user: Optional[ModelWithName] = None
    invoiceGuid: Optional[str] = None
    invoiceQuantity: Optional[float] = None
    invoiceRowGuid: Optional[str] = None
    invoiceRowDescription: Optional[str] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    travelStartTime: Optional[datetime] = None
    travelEndTime: Optional[datetime] = None


class ReimbursedWorkHourOutputModel(BaseModel):
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    user: Optional[ModelWithName] = None
    overtime: Optional[ModelWithName] = None
    eventDate: Optional[date] = None
    quantity: Optional[float] = None
    startTime: Optional[datetime] = None
    endTime: Optional[datetime] = None
    phase: Optional[ModelWithName] = None
    project: Optional[ReimbursedWorkHourProjectSubModel] = None
    customer: Optional[ModelWithName] = None
    workType: Optional[ModelWithName] = None
    invoiceGuid: Optional[str] = None
    invoiceRowGuid: Optional[str] = None
    description: Optional[str] = None
    unitPrice: Optional[MoneyOutputModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    invoiceRowDescription: Optional[str] = None
    invoiceQuantity: Optional[float] = None
    invoiceRowComment: Optional[str] = None
    plannedInvoiceQuantity: Optional[float] = None


class TeamProductivityOutputModel(BaseModel):
    guid: Optional[str] = None
    projectGuid: Optional[str] = None
    user: Optional[UserWithNameAndPhotoFileModel] = None
    workHours: Optional[float] = None
    workHoursValue: Optional[MoneyOutputModel] = None
    workHoursCost: Optional[MoneyOutputModel] = None
    workHoursBillable: Optional[float] = None
    calculatedShareOfBilling: Optional[MoneyOutputModel] = None
    calculatedShareOfBillingPercentage: Optional[float] = None
    adjustedShareOfBilling: Optional[MoneyOutputModel] = None
    adjustedShareOfBillingPercentage: Optional[float] = None
    billableHoursPercentage: Optional[float] = None


class TravelExpenseTypeOutputModel(BaseModel):
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    isMileage: Optional[bool] = None
    isDailyAllowance: Optional[bool] = None
    expenseClass: Optional[ExpensesClass] = None
    purchaseVatRate: Optional[float] = None
    includeTime: Optional[bool] = None
    costAccount: Optional[TravelExpenseCostAccountSubModel] = None
    unitCost: Optional[MoneyOutputModel] = None
    code: Optional[str] = None
    vatRate: Optional[float] = None
    measurementUnit: Optional[str] = None
    isActive: Optional[bool] = True
    productCategory: Optional[ModelWithName] = None
    salesAccount: Optional[ProductSalesAccountSubModel2] = None


class PriceModelBase(BaseModel):
    guid: Optional[str] = None
    price: Optional[MoneyOutputModel] = None
    pricelistVersionGuid: Optional[str] = None
    projectGuid: Optional[str] = None
    priceSource: Optional[PriceSource] = None


class WorktypeForProjectOutputModel(BaseModel):
    worktype: Optional[WorkTypeOutputModel] = None
    hourPrice: Optional[MoneyOutputModel] = None


class ErrorModel(BaseModel):
    httpStatusCode: Optional[int] = None
    type: Optional[ExceptionTypeEnum] = None
    details: Optional[List[ExceptionDetailModel]] = None
    stack: Optional[str] = None


class FlatRateOutputModel(BaseModel):
    guid: Optional[str] = None
    project: Optional[FlatrateProjectSubModel] = None
    phase: Optional[ModelBaseWithRequiredGuid] = None
    billingSchedule: Optional[BillingScheduleType] = None
    plannedBillingDate: Optional[date] = None
    price: Optional[MoneyOutputModel] = None
    includesHours: Optional[float] = 0
    billAdditionalHours: Optional[bool] = True
    pricePerAdditionalHour: Optional[MoneyOutputModel] = None
    invoiceGuid: Optional[str] = None


class ActivityRecurrenceModel(BaseModel):
    frequency: RecurrenceFrequency
    pattern: Optional[RecurrencePattern] = None
    range: Optional[RecurrenceRange] = None
    exceptions: Optional[List[datetime]] = None
    lastOccurrenceDateTime: Optional[datetime] = None


class UserOutputModel(BaseModel):
    firstName: Annotated[str, Field(min_length=1)]
    lastName: Annotated[str, Field(min_length=1)]
    salutation: Optional[SalutationType] = None
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    guid: Optional[str] = None
    isActive: Optional[bool] = True
    email: Optional[str] = None
    phone: Optional[str] = None
    socialSecurityNumber: Optional[str] = None
    businessUnit: Optional[BusinessUnitSubModel] = None
    workType: Optional[ModelBaseWithRequiredGuid] = None
    permissionProfile: Optional[ModelWithName] = None
    superiorUser: Optional[ModelBaseWithRequiredGuid] = None
    workContract: Optional[UserWorkContractSubModel] = None
    lastLogin: Optional[datetime] = None
    title: Optional[str] = None
    satisfaction: Optional[SatisfactionLevelType] = None
    code: Optional[str] = None
    address: Optional[str] = None
    postalCode: Optional[str] = None
    city: Optional[str] = None
    country: Optional[UserCountrySubModel] = None
    countryRegion: Optional[ModelWithName] = None
    culture: Optional[UserCultureSubModel] = None
    language: Optional[UserLanguageSubModel] = None
    timezone: Optional[TimezoneModel] = None
    birthDate: Optional[datetime] = None
    bankAccountNumber: Optional[str] = None
    notes: Optional[str] = None
    keywords: Optional[List[UserKeywordSubModel]] = None
    defaultActivityType: Optional[ModelWithName] = None
    userType: Optional[UserType] = None


class ProductPriceOutputModel(BaseModel):
    prices: Optional[List[ProductPriceModel]] = None
    product: Optional[ProductPriceProductOutputSubModel] = None
    isAvailable: Optional[bool] = None
    isVolumePriced: Optional[bool] = None


class TravelPriceOutputModel(BaseModel):
    prices: Optional[List[PriceModelBase]] = None
    product: Optional[TravelPriceProductSubModel] = None


class ExceptionModel(BaseModel):
    error: Optional[ErrorModel] = None


class ActivityModel(BaseModel):
    startDateTime: datetime
    endDateTime: Optional[datetime] = None
    isClosed: Optional[bool] = None
    isAllDay: Optional[bool] = None
    hasDuration: Optional[bool] = None
    isUnassigned: Optional[bool] = None
    hasHours: Optional[bool] = None
    notes: Optional[str] = None
    location: Optional[Annotated[str, Field(min_length=0, max_length=1000)]] = None
    activityType: ActivityActivityType
    ownerUser: ActivityOwnerModel
    customer: Optional[ActivityCustomer] = None
    phase: Optional[ActivityPhase] = None
    recurrenceParentActivityGuid: Optional[str] = None
    projectTaskStatus: Optional[ModelWithName] = None
    recurrence: Optional[ActivityRecurrenceModel] = None
    recurrenceRule: Optional[str] = None
    recurrenceType: Optional[RecurrenceType] = None
    guid: Optional[str] = None
    name: Annotated[str, Field(min_length=1)]
    createdDateTime: Optional[datetime] = None
    createdBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
    lastUpdatedDateTime: Optional[datetime] = None
    lastUpdatedBy: Optional[UserWithFirstNameLastNameAndPhotoFileModel] = None
